---
import type { HeaderI18n } from "@/types/types";
import Hamburger from "@/components/Hamburger.astro";
import Traductor from "@/components/Traductor.astro";
import Theme from "@/components/Theme.astro";
import Identification from "@/components/Identification.astro";

// Obtener las traduccciones
const data = Astro.props.data as HeaderI18n;
const { lang } = Astro.params;
---

<header class="fixed top-0 left-0 w-full z-50 h-20 bg-background flex items-center justify-between px-5 md:px-10">
  <Identification data={data.identification.modal} />
  <Hamburger data={data} />
  <img src="/img/logo_amanah.webp" alt="" class="h-full hidden lg:block" id="logo_amanah" />
  <nav class="hidden lg:block z-10">
    <ul class="flex flex-row gap-6 items-center color-red text-red font-jomolhari justify-center whitespace-nowrap">
      <li><a href={!lang ? "/" : `/${lang}/`}>{data.about_us}</a></li>
      <li><a href={!lang ? "/articles" : `/${lang}/articles`}>{data.articles}</a></li>
      <li><a href={!lang ? "/pricing" : `/${lang}/pricing`}>{data.pricing}</a></li>
      <li><a href={!lang ? "/courses" : `/${lang}/courses`}>{data.courses}</a></li>
      <li><a href={!lang ? "/comments" : `/${lang}/comments`}>{data.comments}</a></li>
      <li><a href={!lang ? "/contact" : `/${lang}/contact`}>{data.contact}</a></li>
    </ul>
  </nav>
  <div class="flex z-10">
    <button
      id="identification"
      class="bg-lightRed hover:bg-salmon transition-colors rounded-lg text-gray-50 font-semibold py-2 mr-3 shadow-lg hover:shadow-xl transition-all duration-200 text-xs px-3 hidden lg:block"
      data-header={JSON.stringify(data.identification)}
    >
    </button>
    <Theme />
    <Traductor />
  </div>
</header>

<script>
  import { auth } from "@/lib/firebase.js";
  import { onAuthStateChanged } from "firebase/auth";
  import { updateIdentificationButton } from "@/utils/identifications";

  // Referencias al modal de login y register
  const authModalLogin = document.getElementById("authModalLogin") as HTMLDialogElement;
  const formLogin = authModalLogin.querySelector("form") as HTMLFormElement;
  const btnIdentification = document.getElementById("identification") as HTMLButtonElement;
  const headerData = JSON.parse(btnIdentification.dataset.header || "");

  // Actualizamos segun el tamaño de la ventana
  document.addEventListener("DOMContentLoaded", () => {
    window.addEventListener("resize", () => {
      updateIdentificationButton(auth.currentUser, authModalLogin, formLogin, auth, headerData);
    });

    // Imagen del logo
    // Cambiar el logo en función al tema de la web dark o light
    window.addEventListener("themeChange", (event: Event) => {
      const img_log = document.getElementById("logo_amanah") as HTMLImageElement;
      if ((event as CustomEvent).detail.theme === "dark" && img_log) img_log.src = "/img/logo_amanah_dark.webp";
      else if (img_log) img_log.src = "/img/logo_amanah.webp";
      else console.error("No se encontró el logo");
    });
  });

  // Firebase auth state
  onAuthStateChanged(auth, async (user) => {
    updateIdentificationButton(user, authModalLogin, formLogin, auth, headerData);
    if (user) {
      const idToken = await user.getIdToken();
      // Guardamos la session id en las cookies
      document.cookie = `tokenUser=${idToken}; path=/; Secure; SameSite=Strict`;
    } else {
      // Eliminamos la session id de las cookies
      document.cookie = `tokenUser=; path=/; expires=Thu, 01 Jan 1970 00:00:00 GMT`;
    }
  });
</script>
