---
import PersoneIcon from "@/assets/person.svg";
import AtSignIcon from "@/assets/at-sign.svg";
import EmailIcon from "@/assets/email.svg";
import PasswordIcon from "@/assets/password.svg";
import { TERMNS } from "@/utils/constants";
import type { ModalI18n } from "@/types/types";
import GoogleIcon from "@/assets/google.svg";

const TURNSTILE_SITE_KEY = import.meta.env.PUBLIC_TURNSTILE_SITE_KEY;
if (!TURNSTILE_SITE_KEY) console.warn("No TURNSTILE_SITE_KEY provided");

const data = Astro.props.data as ModalI18n;
const label = Astro.props.label;
---

<!-- Login -->
<dialog
  id="authModalLogin"
  class="modal border-0 rounded-2xl p-0 max-w-md w-[90%] shadow-2xl bg-gradient-to-br from-white to-smoothBrown overflow-hidden font-normal text-sm"
>
  <div class="p-8 relative">
    <!-- Close Button -->
    <button
      class="absolute top-4 right-4 w-10 h-10 rounded-full bg-lightSalmon hover:bg-red text-brown hover:text-white transition-all duration-300 flex items-center justify-center font-light border-0 cursor-pointer shadow-sm hover:shadow-md transform hover:scale-110"
      aria-label="close-modal"
    >
      ×
    </button>

    <!-- Header -->
    <div class="text-center mb-8 mt-4">
      <div
        class="w-16 h-16 bg-gradient-to-br from-salmon to-brown rounded-full mx-auto mb-4 flex items-center justify-center shadow-lg"
      >
        <PersoneIcon />
      </div>
      <h2 class="text-xl font-bold text-brown mb-2">{data.login.title}</h2>
      <p class="text-lightBrown text-xs">{data.login.subtitle}</p>
    </div>
    <!-- Form -->
    <form class="space-y-4" id="loginForm">
      {
        TURNSTILE_SITE_KEY && (
          <div id="turnstile-login" class="cf-turnstile" data-sitekey={TURNSTILE_SITE_KEY} data-size="invisible" />
        )
      }
      <!-- Email Input -->
      <div class="relative">
        <input
          type="email"
          placeholder={data.utils.labels.email}
          name="email"
          class="w-full px-4 py-2 bg-smoothBrown border border-lightSalmon rounded-xl focus:outline-none focus:ring-2 focus:ring-salmon focus:border-transparent transition-all duration-200 text-black placeholder-lightBrown font-normal"
        />
        <div class="absolute inset-y-0 right-0 pr-3 flex items-center pointer-events-none">
          <EmailIcon />
        </div>
      </div>
      <!-- Password Input -->
      <div class="relative">
        <input
          type="password"
          placeholder={data.utils.labels.password}
          name="password"
          class="w-full px-4 py-2 bg-smoothBrown border border-lightSalmon rounded-xl focus:outline-none focus:ring-2 focus:ring-salmon focus:border-transparent transition-all duration-200 text-black placeholder-lightBrown"
        />
        <div class="absolute inset-y-0 right-0 pr-3 flex items-center pointer-events-none">
          <PasswordIcon />
        </div>
      </div>
      <!-- Submit Button -->
      <!-- Mensajes de error -->
      <div id="loginError" class="hidden text-center text-lightRed mt-2 p-3 bg-slate-50"></div>
      <button
        type="submit"
        class="w-full bg-gradient-to-r from-salmon to-brown hover:from-lightRed hover:to-red text-white font-semibold py-2 px-4 rounded-xl transition-all duration-300 transform hover:shadow-lg focus:outline-none focus:ring-2 focus:ring-salmon focus:ring-offset-2"
      >
        {data.login.button}
      </button>
      <!-- Google Login Button Minimalista -->
      <button
        type="button"
        class="googleLoginBtn w-full flex items-center justify-center gap-2 bg-blue-50 border border-gray-300 rounded-xl py-2 px-4 shadow-sm hover:shadow-md transition-all duration-200 hover:bg-blue-100 focus:outline-none focus:ring-2 focus:ring-blue-400 focus:ring-offset-2"
        style="font-weight: 500;"
      >
        <GoogleIcon />
        <span class="text-gray-700">Google</span>
      </button>
      <!-- Loading indicator -->
      <div id="loginLoading" class="hidden text-center text-lightBrownmt-2">{data.utils.loading}</div>
      <!-- Divider -->
      <div class="relative my-6">
        <div class="absolute inset-0 flex items-center">
          <div class="w-full border-t border-lightSalmon"></div>
        </div>
        <div class="relative flex justify-center">
          <span class="px-2 bg-white text-lightBrown">o</span>
        </div>
      </div>
      <!-- Register Link -->
      <div class="text-center">
        <a
          href="#"
          class="toggleIdentification text-salmon hover:text-brown font-medium hover:underline transition-colors duration-200"
        >
          {data.login.toggleModal}
        </a>
      </div>
      <!-- Forgot Password -->
      <div class="text-center">
        <a
          href="/profile"
          class="text-lightBrown hover:text-brown text-xs hover:underline transition-colors duration-200"
        >
          {data.login.forgot_password}
        </a>
      </div>
    </form>
  </div>
</dialog>
<!-- Register -->
<dialog
  id="authModalRegister"
  class="modal border-0 rounded-2xl p-0 max-w-md w-[90%] shadow-2xl bg-gradient-to-br from-white to-smoothBrown overflow-hidden font-normal text-sm"
>
  <div class="p-8 relative">
    <!-- Close Button -->
    <button
      class="absolute top-4 right-4 w-10 h-10 rounded-full bg-lightSalmon hover:bg-red text-brown hover:text-white transition-all duration-300 flex items-center justify-center text-xl font-light border-0 cursor-pointer shadow-sm hover:shadow-md transform hover:scale-110"
      aria-label="close-modal"
    >
      ×
    </button>
    <!-- Header -->
    <div class="text-center mb-8 mt-4">
      <div
        class="w-16 h-16 bg-gradient-to-br from-salmon to-brown rounded-full mx-auto mb-4 flex items-center justify-center shadow-lg"
      >
        <PersoneIcon />
      </div>
      <h2 class="text-xl font-bold text-brown mb-2">{data.register.title}</h2>
      <p class="text-lightBrown text-xs">{data.register.subtitle}</p>
    </div>
    <!-- Form -->
    <form class="space-y-4" id="registerForm">
      {
        TURNSTILE_SITE_KEY && (
          <div id="turnstile-register" class="cf-turnstile" data-sitekey={TURNSTILE_SITE_KEY} data-size="invisible" />
        )
      }
      <!-- Nombre Input -->
      <div class="relative">
        <input
          type="text"
          placeholder={data.utils.labels.name}
          name="name"
          class="w-full px-4 py-2 bg-smoothBrown border border-lightSalmon rounded-xl focus:outline-none focus:ring-2 focus:ring-salmon focus:border-transparent transition-all duration-200 text-black placeholder-lightBrown"
        />
        <div class="absolute inset-y-0 right-0 pr-3 flex items-center pointer-events-none"></div>
      </div>
      <!-- Email Input -->
      <div class="relative">
        <input
          type="email"
          placeholder={data.utils.labels.email}
          name="email"
          class="w-full px-4 py-2 bg-smoothBrown border border-lightSalmon rounded-xl focus:outline-none focus:ring-2 focus:ring-salmon focus:border-transparent transition-all duration-200 text-black placeholder-lightBrown"
        />
        <div class="absolute inset-y-0 right-0 pr-3 flex items-center pointer-events-none">
          <AtSignIcon />
        </div>
      </div>
      <!-- Password Input -->
      <div class="relative">
        <input
          type="password"
          placeholder={data.utils.labels.password}
          name="password"
          class="w-full px-4 py-2 bg-smoothBrown border border-lightSalmon rounded-xl focus:outline-none focus:ring-2 focus:ring-salmon focus:border-transparent transition-all duration-200 text-black placeholder-lightBrown"
        />
        <div class="absolute inset-y-0 right-0 pr-3 flex items-center pointer-events-none">
          <PasswordIcon />
        </div>
      </div>
      <!-- Terminos y condiciones, politica de privacidad, newsletter -->
      <ul>
        {
          data.register.info?.map((item: string, index: number) => (
            <li>
              <label class="flex items-center">
                <input type="checkbox" name={TERMNS[index]} class="mr-2" />
                <a
                  href="/legal"
                  title={label}
                  rel="license"
                  aria-label={label}
                  aria-describedby="legal"
                  target="_blank"
                  class="text-lightBrown text-xs  hover:underline hover:text-red"
                >
                  {item}
                </a>
              </label>
            </li>
          ))
        }
      </ul>
      <!-- Mensajes de error -->
      <div id="registerError" class="hidden text-center text-lightRed mt-2 p-3 bg-slate-50"></div>
      <!-- Register Button -->
      <button
        type="submit"
        class="w-full bg-gradient-to-r from-salmon to-brown hover:from-lightRed hover:to-red text-white font-semibold py-2 px-4 rounded-xl transition-all duration-300 transform hover:shadow-lg focus:outline-none focus:ring-2 focus:ring-salmon focus:ring-offset-2"
      >
        {data.register.title}
      </button>
      <!-- Google Login Button -->
      <button
        type="button"
        class="googleLoginBtn w-full flex items-center justify-center gap-2 bg-blue-50 border border-gray-300 rounded-xl py-2 px-4 shadow-sm hover:shadow-md transition-all duration-200 hover:bg-blue-100 focus:outline-none focus:ring-2 focus:ring-blue-400 focus:ring-offset-2"
        style="font-weight: 500;"
      >
        <GoogleIcon />
        <span class="text-gray-700">Google</span>
      </button>
      <!-- Loading indicator -->
      <div id="registerLoading" class="hidden text-center text-lightBrown mt-2">{data.utils.loading}</div>
      <!-- Divider -->
      <div class="relative my-6">
        <div class="absolute inset-0 flex items-center">
          <div class="w-full border-t border-lightSalmon"></div>
        </div>
        <div class="relative flex justify-center">
          <span class="px-2 bg-white text-lightBrown">o</span>
        </div>
      </div>

      <!-- Register Link -->
      <div class="text-center">
        <a
          href="#"
          class="toggleIdentification text-salmon hover:text-brown font-medium hover:underline transition-colors duration-200"
        >
          {data.register.toggleModal}
        </a>
      </div>
    </form>
  </div>
</dialog>

<!-- Validacion de entrada -->
<script src="https://unpkg.com/just-validate@latest/dist/just-validate.production.min.js"></script>
<!-- Cloudflare Turnstile -->
<script src="https://challenges.cloudflare.com/turnstile/v0/api.js?render=explicit" defer is:inline></script>
<!-- Logica de registro y login -->
<script>
  import { toggleLoginToRegister, submitFormToRegisterOrLogin, handleLogGoogleProvider } from "@/services/firebase";

  // Estado actual de registro o Login
  let isRegister = false;

  function updateTurnstileVisibility() {
    const loginWidget = document.getElementById("turnstile-login");
    const registerWidget = document.getElementById("turnstile-register");
    if (loginWidget) loginWidget.style.display = isRegister ? "none" : "";
    if (registerWidget) registerWidget.style.display = isRegister ? "" : "none";
  }

  // Esperamos a que el DOM esté completamente cargado
  document.addEventListener("DOMContentLoaded", () => {
    // Referencias a elementos del DOM
    const authModalRegister = document.getElementById("authModalRegister") as HTMLDialogElement;
    const authModalLogin = document.getElementById("authModalLogin") as HTMLDialogElement;
    const formLogin = document.getElementById("loginForm") as HTMLFormElement;
    const formRegister = document.getElementById("registerForm") as HTMLFormElement;
    const changeModalButtons = document.querySelectorAll(".toggleIdentification") as NodeListOf<HTMLAnchorElement>;
    const registerLoading = document.getElementById("registerLoading") as HTMLDivElement;
    const loginLoading = document.getElementById("loginLoading") as HTMLDivElement;
    const loginError = document.getElementById("loginError") as HTMLDivElement;
    const registerError = document.getElementById("registerError") as HTMLDivElement;

    // Cambiamos de login a register viceversa
    changeModalButtons.forEach((link) => {
      link.addEventListener("click", (e) => {
        e.preventDefault();
        isRegister = toggleLoginToRegister(authModalLogin, authModalRegister, formLogin, formRegister, isRegister);
        updateTurnstileVisibility();
      });
    });

    // Gestiona los formularios, las validaciones y los envios de formulario
    submitFormToRegisterOrLogin(authModalLogin, loginLoading, "#loginForm", false, loginError);
    submitFormToRegisterOrLogin(authModalRegister, registerLoading, "#registerForm", true, registerError);

    const googleBtns = document.querySelectorAll(".googleLoginBtn") as NodeListOf<HTMLButtonElement>;
    googleBtns.forEach((googleBtn) => {
      googleBtn.addEventListener("click", async () => {
        if (isRegister) {
          handleLogGoogleProvider(authModalRegister, formRegister, isRegister, loginError).catch((error) =>
            console.error("Error al iniciar sesión con Google:", error)
          );
        } else {
          handleLogGoogleProvider(authModalLogin, formLogin, isRegister, loginError).catch((error) =>
            console.error("Error al iniciar sesión con Google:", error)
          );
        }
      });
    });
  });
</script>
