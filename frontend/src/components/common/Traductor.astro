---
import TraductorIcon from "@/assets/traductor.svg";

const customStyle = (Astro.props.customStyle || "bg-salmon") as string;
const label = Astro.props.label;
---

<button id="btnTraductor" aria-label={label}>
  <TraductorIcon />
</button>
<div
  id="bocadilloTraductor"
  class={`${customStyle} min-h-fit w-32 absolute text-sm top-16 right-4 rounded-lg shadow-lg text-white hidden z-50 font-jomolhari font-normal py-3 px-2 backdrop-blur-sm`}
>
  <ul class="w-full space-y-2">
    <li class="transition-all duration-200 hover:bg-white/10 rounded-md">
      <a href="#" data-lang="ar" class="flex items-center gap-3 px-4 hover:text-red transition-colors duration-200">
        <span class="text-lg">ðŸ‡¸ðŸ‡¦</span>
        <span class="font-medium">Ø§Ù„Ø¹Ø±Ø¨ÙŠØ©</span>
      </a>
    </li>
    <li class="transition-all duration-200 hover:bg-white/10 rounded-md">
      <a href="#" data-lang="de" class="flex items-center gap-3 px-4 hover:text-red transition-colors duration-200">
        <span class="text-lg">ðŸ‡©ðŸ‡ª</span>
        <span class="font-medium">Deutsch</span>
      </a>
    </li>
    <li class="transition-all duration-200 hover:bg-white/10 rounded-md">
      <a href="#" data-lang="en" class="flex items-center gap-3 px-4 hover:text-red transition-colors duration-200">
        <span class="text-lg">ðŸ‡¬ðŸ‡§</span>
        <span class="font-medium">English</span>
      </a>
    </li>
    <li class="transition-all duration-200 hover:bg-white/10 rounded-md">
      <a href="#" data-lang="es" class="flex items-center gap-3 px-4 hover:text-red transition-colors duration-200">
        <span class="text-lg">ðŸ‡ªðŸ‡¸</span>
        <span class="font-medium">EspaÃ±ol</span>
      </a>
    </li>
    <li class="transition-all duration-200 hover:bg-white/10 rounded-md">
      <a href="#" data-lang="fr" class="flex items-center gap-3 px-4 hover:text-red transition-colors duration-200">
        <span class="text-lg">ðŸ‡«ðŸ‡·</span>
        <span class="font-medium">FranÃ§ais</span>
      </a>
    </li>
    <li class="transition-all duration-200 hover:bg-white/10 rounded-md">
      <a href="#" data-lang="it" class="flex items-center gap-3 px-4 hover:text-red transition-colors duration-200">
        <span class="text-lg">ðŸ‡®ðŸ‡¹</span>
        <span class="font-medium">Italiano</span>
      </a>
    </li>
    <li class="transition-all duration-200 hover:bg-white/10 rounded-md">
      <a href="#" data-lang="pt" class="flex items-center gap-3 px-4 hover:text-red transition-colors duration-200">
        <span class="text-lg">ðŸ‡µðŸ‡¹</span>
        <span class="font-medium">PortuguÃªs</span>
      </a>
    </li>
  </ul>
</div>

<div
  id="trianguloTraductor"
  class="absolute top-[3.5rem] right-8 w-0 h-0 hidden z-50"
  style={customStyle == "bg-salmon"
    ? "border-left: 12px solid transparent; border-right: 12px solid transparent; border-bottom: 12px solid var(--color-salmon);"
    : "border-left: 12px solid transparent; border-right: 12px solid transparent; border-bottom: 12px solid #374151;"}
>
</div>

<script>
  // Espera a que el DOM estÃ© completamente cargado
  document.addEventListener("DOMContentLoaded", function () {
    const btnTraductor = document.getElementById("btnTraductor");
    const bocadilloTraductor = document.getElementById("bocadilloTraductor");
    const trianguloTraductor = document.getElementById("trianguloTraductor");

    if (btnTraductor && bocadilloTraductor && trianguloTraductor) {
      // Manejar clic en el botÃ³n del traductor
      btnTraductor.addEventListener("click", function (e) {
        e.stopPropagation();
        bocadilloTraductor.classList.toggle("hidden");
        trianguloTraductor.classList.toggle("hidden");
      });

      // Manejar clics en los enlaces de idioma
      bocadilloTraductor.addEventListener("click", function (e) {
        const target = e.target as HTMLElement;
        // Buscar el elemento <a> mÃ¡s cercano (puede ser el target o un ancestro)
        const link = target.closest("a[data-lang]");

        if (link) {
          e.preventDefault();
          const lang = link.getAttribute("data-lang");
          const currentPath = window.location.pathname;

          // Remover el prefijo de idioma actual si existe
          const pathWithoutLang = currentPath.replace(/^\/(ar|de|en|es|fr|it|pt)(\/|$)/, "/");

          // Construir nueva URL
          let newPath = lang === "es" ? pathWithoutLang || "/" : `/${lang}${pathWithoutLang || "/"}`;
          // Limpiar dobles barras
          newPath = newPath.replace(/\/+/g, "/");

          window.location.href = newPath;
        }
      });
    }

    // Cerrar el menÃº si se hace clic fuera de Ã©l
    document.addEventListener("click", function (e) {
      if (
        bocadilloTraductor &&
        trianguloTraductor &&
        btnTraductor &&
        !bocadilloTraductor.classList.contains("hidden") &&
        !btnTraductor.contains(e.target as Node) &&
        !bocadilloTraductor.contains(e.target as Node) &&
        !trianguloTraductor.contains(e.target as Node)
      ) {
        bocadilloTraductor.classList.add("hidden");
        trianguloTraductor.classList.add("hidden");
      }
    });
  });
</script>
