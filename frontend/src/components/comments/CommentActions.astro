---
import Like from "@/assets/like.svg";

interface Props {
  commentId: string | undefined;
  likeCount: number;
  usersLiked: string[];
  buttonsCommentTraductions: any;
  lang: string;
}

const { commentId, likeCount, usersLiked, buttonsCommentTraductions, lang } = Astro.props;
---

<!-- Footer minimalista -->
<div class="px-4 py-1 bg-salmon mt-auto">
  <div class="flex items-center justify-between">
    <!-- Botón de responder -->
    <button
      class="reply-btn flex items-center space-x-1 px-2 py-1 rounded-md hover:bg-[var(--color-light-red)] transition-colors duration-200"
    >
      <svg class="w-3.5 h-3.5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="M3 10h10a8 8 0 018 8v2M3 10l6 6m-6-6l6-6"></path>
      </svg>
      <span class="text-xs font-medium">{buttonsCommentTraductions[lang].reply}</span>
    </button>

    <!-- Botón de like compacto -->
    <button
      class="flex items-center space-x-1 px-2 py-1 rounded-md hover:bg-[var(--color-light-red)] transition-colors duration-200 like-icon cursor-pointer"
      data-users-liked={JSON.stringify(usersLiked ?? [])}
      data-id={commentId}
    >
      <Like
        class="w-3.5 h-3.5 text-[var(--text-medium-contrast)] hover:text-[var(--color-red)] transition-colors duration-200 like-svg"
      />
      <span class="text-xs font-medium text-[var(--text-medium-contrast)] min-w-3 text-center">
        {likeCount || 0}
      </span>
    </button>
  </div>
</div>

<style>
  .like-svg {
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    color: #6b7280;
    fill: #cbcbcb;
  }

  .like-icon.liked .like-svg,
  .like-svg.liked {
    color: var(--color-red);
    fill: var(--color-light-red);
    animation: likeAnimation 0.6s ease-in-out;
  }

  .like-svg:hover {
    color: var(--color-red);
    transform: scale(1.1);
  }

  .like-svg.pulse {
    animation: pulseEffect 0.3s ease-out;
  }

  @keyframes likeAnimation {
    0% {
      transform: scale(1);
    }
    15% {
      transform: scale(1.2);
    }
    30% {
      transform: scale(0.95);
    }
    45% {
      transform: scale(1.1);
    }
    60% {
      transform: scale(0.98);
    }
    100% {
      transform: scale(1);
    }
  }

  @keyframes pulseEffect {
    0% {
      transform: scale(1);
    }
    50% {
      transform: scale(1.3);
    }
    100% {
      transform: scale(1);
    }
  }
</style>
