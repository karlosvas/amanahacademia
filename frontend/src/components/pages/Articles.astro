---
import Title from "@/components/common/Title.astro";
import { getCollection } from "astro:content";
import type { ArticleI18n, ArticlesAstro } from "@/types/types";

const data = Astro.props.data as ArticleI18n;
const articles = (await getCollection("articles")) as ArticlesAstro[];
const R2_URL = import.meta.env.PUBLIC_R2_PUBLIC_URL;
---

<main class="w-11/12 md:w-3/4 m-auto text-black">
  <Title customStyleText="text-2xl " customStyleLine="w-20 mb-10">{data.title}</Title>
  <div class="w-full lg:w-1/2 m-auto pb-3">
    <p class="text-center font-semibold text-red">{data.summary[0]}</p>
    <p class="px-10 pb-5">{data.summary[1]}</p>
  </div>

  <div id="articles" class="mb-20 columns-1 sm:columns-2 md:columns-3 gap-4 p-4">
    {
      articles.map((article: ArticlesAstro) => {
        return (
          <a
            href="#"
            data-pdf-url={R2_URL + article.data.pdfUrl}
            data-pdf-name={article.data.title + ".pdf"}
            class="article-link scroll-fade-in mb-4 break-inside-avoid rounded-lg bg-salmon overflow-hidden cursor-pointer block"
            style={`height: ${150 + Math.random() * 180}px; width: 100%`}
            data-article-id={article.id}
            data-article-title={article.data.title}
          >
            <img
              src={R2_URL + article.data.imageUrl}
              alt={article.data.title}
              class="w-full h-full rounded-lg object-cover object-top transition-transform duration-300 ease-out hover:scale-105"
              loading="lazy"
              decoding="async"
            />
          </a>
        );
      })
    }
  </div>
</main>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const articleLinks = document.querySelectorAll(".article-link");

    articleLinks.forEach((link) => {
      link.addEventListener("click", async (e) => {
        e.preventDefault();
        const target = e.currentTarget as HTMLElement;
        const pdfUrl = target.dataset.pdfUrl!;
        const pdfName = target.dataset.pdfName!;

        // Track analytics
        if (window.gtag) {
          window.gtag("event", "article_click", {
            article_id: target.dataset.articleId,
            article_title: target.dataset.articleTitle,
            category: "articles",
          });
        }

        // Forzar descarga
        const response = await fetch(pdfUrl);
        const blob = await response.blob();
        const url = URL.createObjectURL(blob);

        // Descargar
        const downloadLink = document.createElement("a");
        downloadLink.href = url;
        downloadLink.download = pdfName;
        downloadLink.click();

        // Abrir en nueva pestaña después de descargar
        setTimeout(() => {
          window.open(pdfUrl, "_blank");
          URL.revokeObjectURL(url);
        }, 100);
      });
    });
  });
</script>
