---
import ThemeIcon from "@/assets/theme.svg";
---

<!-- Agregar id al componente -->
<div id="theme" class="cursor-pointer">
  <ThemeIcon />
</div>

<script>
  // Función para obtener tema desde cookie
  function getThemeFromCookie() {
    const cookieValue = document.cookie
      .split("; ")
      .find((row) => row.startsWith("theme="))
      ?.split("=")[1];

    return cookieValue || "light"; // Default a light si no existe
  }

  // Función para establecer tema
  function setTheme(newTheme: string, body: HTMLBodyElement) {
    // Aplicar al DOM
    body.className = newTheme;

    // Guardar en cookie
    document.cookie = `theme=${newTheme}; path=/; max-age=31536000; SameSite=Lax`;

    // Aplicar clases CSS
    if (newTheme === "dark") {
      document.documentElement.classList.add("dark");
      document.documentElement.classList.remove("light");
    } else {
      document.documentElement.classList.add("light");
      document.documentElement.classList.remove("dark");
    }
    return newTheme;
  }

  document.addEventListener("DOMContentLoaded", () => {
    // Obtenemos las referencias
    const themeButton = document.getElementById("theme") as HTMLDivElement;
    const body = document.body as HTMLBodyElement;
    const currentTheme = setTheme(getThemeFromCookie(), body) as "light" | "dark";

    // Espera a que todo el DOM esté listo (incluido el logo)
    setTimeout(() => {
      window.dispatchEvent(
        new CustomEvent("themeChange", {
          detail: { theme: currentTheme },
        })
      );
    }, 50);

    // Event listener del botón
    if (themeButton) {
      themeButton.addEventListener("click", function () {
        const currentTheme = body.className;
        const newTheme = currentTheme === "light" ? "dark" : "light";
        setTheme(newTheme, body);
        // Evento personalizado
        window.dispatchEvent(
          new CustomEvent("themeChange", {
            detail: { theme: newTheme },
          })
        );
      });
    }
  });
</script>
